{"version":3,"file":"static/js/696.7246521c.chunk.js","mappings":"yMACA,EAA8B,iCAA9B,EAAoF,wCAApF,EAAiJ,wCAAjJ,EAA4M,sC,SCyF5M,EArFoB,WAElB,IAAMA,GAAWC,EAAAA,EAAAA,MAkDjB,OACE,kBACMC,UAAWC,EACXC,SAjBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACXC,EAAUF,EAAKG,SAASC,KAAKC,MAC7BC,EAAYN,EAAKG,SAASI,OAAOF,MACrCZ,GACEe,EAAAA,EAAAA,IAAW,CACTJ,KAAMF,EACNK,OAAQD,KAGZN,EAAKS,OACN,EAGC,WAGE,mBAAOd,UAAWC,EAAlB,kBACA,kBAAOD,UAAWC,EAChBc,KAAK,OACLN,KAAK,OACLO,YAAY,qBACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAKV,mBAAOnB,UAAWC,EAAlB,oBACA,kBAAOD,UAAWC,EAChBc,KAAK,MACLN,KAAK,SACLO,YAAY,uBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAKV,mBAAQnB,UAAWC,EACnBc,KAAK,SADL,2BAIL,E,SCxFD,EAA8B,iCAA9B,EAAsF,0CAAtF,EAAkJ,qCAAlJ,EAAwM,oCAAxM,EAAqQ,4CCGxPK,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEzBC,EAAyB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,MAAnB,ECmC3C,EAhCoB,WAClB,IAIIC,EAJEC,GAAmBC,EAAAA,EAAAA,IAAYJ,GAE/BzB,GAAWC,EAAAA,EAAAA,MACXuB,GAAWK,EAAAA,EAAAA,IAAYP,GAI3BK,EADkB,KAAhBC,GAA2BA,IAAqB,GACpCJ,EAEAI,EAQhB,OACA,eAAI1B,UAAWC,EAAf,SACGwB,EAAYG,KAAI,SAACC,GAAD,OACf,gBAAI7B,UAAWC,EAAf,WAEE,eAAID,UAAWC,EAAf,SAAwC4B,EAAQpB,QAChD,cAAGT,UAAWC,EAAd,SAAsC4B,EAAQjB,UAC9C,mBAAQZ,UAAWC,EAA+B6B,QAAS,kBAX3CC,EAW8DF,EAAQG,QAV1FlC,GAASmC,EAAAA,EAAAA,IAAcF,IADJ,IAACA,CAW2C,EAA3D,sBAHKF,EAAQG,GAFA,KAUpB,ECtCD,EAAiC,+BAAjC,EAAwF,sCAAxF,EAAsJ,sC,SC0BtJ,EAtBe,WAEb,IAAMlC,GAAWC,EAAAA,EAAAA,MAMjB,OACA,gBAAKC,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,mCACA,kBAAQD,UAAWC,EACbc,KAAK,OACLC,YAAY,gBAGZkB,SAAU,SAAA/B,GAAC,OAZE,SAACA,GACpBL,GAASqC,EAAAA,EAAAA,GAAUhC,EAAEiC,OAAO1B,OAC7B,CAUsB2B,CAAalC,EAAjB,QAIpB,ECxBD,EAAwB,wBAAxB,EAA2D,2BCwF3D,MA1EA,WAOE,IAAML,GAAWC,EAAAA,EAAAA,MA2CjB,OAxCAuC,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAuCF,4BACE,4BACE,eAAIE,UAAWC,EAAf,wBACA,SAAC,EAAD,QAIF,4BACE,eAAID,UAAWC,EAAf,uBACA,SAAC,EAAD,KAIA,SAAC,EAAD,SAMP,C","sources":["webpack://react-homework-template/./src/components/contactForm/contactForm.module.scss?f12e","components/contactForm/contactForm.jsx","webpack://react-homework-template/./src/components/contactList/contactList.module.scss?74a3","components/redux/phonebook/selectors.js","components/contactList/contactList.jsx","webpack://react-homework-template/./src/components/filter/filter.module.scss?7c74","components/filter/filter.jsx","webpack://react-homework-template/./src/pages/Contacts/contacts.module.scss?4acc","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__yZuOu\",\"contactForm__label\":\"contactForm_contactForm__label__PYnrB\",\"contactForm__input\":\"contactForm_contactForm__input__09lRd\",\"contactForm__btn\":\"contactForm_contactForm__btn__oqcYE\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'components/redux/phonebook/operations';\n\nimport styles from './contactForm.module.scss'\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch()\n  \n\n  // const [name, setName] = useState('')\n  // const [number, setNumber] = useState('')\n\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (name.trim() === '') {\n  //     return;\n  //   }\n\n  //   const newContact = {\n  //     id: nanoid(),\n  //     name: name,\n  //     number: number\n  //   };\n\n  //   dispatch(addContact(newContact));\n\n  //   setName('');\n  //   setNumber('');\n\n  // };\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   if (name === 'name') {\n  //     setName(value)\n  //   } else if (name === 'number') {\n  //     setNumber(value)\n  //   }\n  // };\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    let newName = form.elements.name.value;\n    let newNumber = form.elements.number.value;\n    dispatch(\n      addContact({\n        name: newName,\n        number: newNumber,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form \n          className={styles.contactForm}\n          onSubmit={handleSubmit}>\n      <label className={styles.contactForm__label}>Name\n      <input className={styles.contactForm__input}\n        type=\"text\"\n        name=\"name\"\n        placeholder='Name your contacts'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // value={name}\n        // onChange={handleChange}\n      />\n      </label>\n      <label className={styles.contactForm__label}>Number\n      <input className={styles.contactForm__input}\n        type=\"tel\"\n        name=\"number\"\n        placeholder='Number your contacts'\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        // value={number}\n        // onChange={handleChange}\n      />\n      </label>\n      <button className={styles.contactForm__btn} \n      type='submit'>Add contact</button>\n    </form>\n  );\n};\nexport default ContactForm\n\n// ContactForm.propTypes = {\n//   addNewName: propTypes.func,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__wCRHy\",\"contactList__element\":\"contactList_contactList__element__blZ+b\",\"contactList__h4\":\"contactList_contactList__h4__2LbPs\",\"contactList__p\":\"contactList_contactList__p__L8K6u\",\"contactList__btnDelete\":\"contactList_contactList__btnDelete__NL4ll\"};","export const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectAllContacts = state => state.contacts.contacts;\n\nexport const selectFilteredContacts = state => state.contacts.filter;","\nimport React from \"react\";\nimport styles from \"./contactList.module.scss\"\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { setFilter } from \"components/redux/phonebook/phoneSlices\";\nimport { deleteContact } from \"components/redux/phonebook/operations\";\nimport { selectAllContacts, selectFilteredContacts } from \"components/redux/phonebook/selectors\";\n\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch()\n  const contacts = useSelector(selectAllContacts)\n  let mapContacts\n\n  if (filteredContacts === `` || filteredContacts === []) {\n    mapContacts = contacts;\n  } else {\n    mapContacts = filteredContacts;\n  }\n\n\n  const handleDelete = (contactId) => {\n    dispatch(deleteContact(contactId))\n  }\n\n  return(\n  <ul className={styles.contactList}>\n    {mapContacts.map((contact) => (\n      <li className={styles.contactList__element}\n        key={contact.id}>\n        <h4 className={styles.contactList__h4}>{contact.name}</h4>\n        <p className={styles.contactList__p}>{contact.number}</p>\n        <button className={styles.contactList__btnDelete} onClick={() => handleDelete(contact.id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n  )\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContacts\":\"filter_filterContacts__Z7cIR\",\"filterContacts__label\":\"filter_filterContacts__label__ywg02\",\"filterContacts__input\":\"filter_filterContacts__input__ddWWR\",\"filterContacts__btn\":\"filter_filterContacts__btn__0IeS-\"};","import React from \"react\";\nimport styles from './filter.module.scss'\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"components/redux/phonebook/phoneSlices\";\n\nconst Filter = () => {\n  // const filter = useSelector((state) => state.contacts.filter)\n  const dispatch = useDispatch()\n\n  const handleChange = (e) => {\n    dispatch(setFilter(e.target.value))\n  }\n\n  return(\n  <div className={styles.filterContacts}>\n    <label className={styles.filterContacts__label}>Find contacts by name\n    <input  className={styles.filterContacts__input}\n          type='text' \n          placeholder=\"Find contacts\"\n          // value={filter} \n          // onChange={handleChange} \n          onChange={e => handleChange(e)}/>\n      </label>\n  </div>\n  )\n};\n\nexport default Filter;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contacts_title__+EwML\",\"subtitle\":\"contacts_subtitle__XfGOn\"};","import { useDispatch} from 'react-redux'\n// import { addContact, deleteContact, fetchContacts } from './../../components/redux/phonebook/operations';\n// import { setFilter } from './../../components/redux/phonebook/phoneSlices'\n\n\n// import { nanoid } from \"nanoid\";\nimport ContactForm  from \"./../../components/contactForm/contactForm\";\nimport ContactList from \"./../../components/contactList/contactList\";\nimport Filter from \"./../../components/filter/filter\";\nimport { useEffect } from 'react';\n// import { selectUser } from 'components/redux/auth/selectors';\nimport { fetchContacts } from './../../components/redux/phonebook/operations';\n\nimport styles from './contacts.module.scss'\n\nfunction Contacts () {\n\n\n  // const contacts = useSelector(selectAllContacts);\n  // const filter = useSelector(selectFilteredContacts);\n  // const dispatch = useDispatch();\n\n  const dispatch = useDispatch();\n  // const userName = useSelector(selectUser);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  // const handleAddContact = (name, number) => {\n  //   if (name.trim() === '') {\n  //     return alert('no text in input');\n  //   }\n\n  //   const isDuplicateContact = contacts.some((contact) => \n  //   contact.name.toLowerCase() === name.toLowerCase());\n  //   if (isDuplicateContact) {\n  //     return alert(`'${name}' is already in contacts.`);\n  //   }\n\n  //   const newContact = {\n  //     id: nanoid(),\n  //     name: name,\n  //     number: number,\n  //   };\n\n  //   dispatch(addContact(newContact))\n  // };\n\n  // const handleDeleteContact = (contactId) => {\n  //   dispatch(deleteContact(contactId))\n  // };\n\n\n  // const handleChangeFilter = (filterValue) =>{\n  //   dispatch(setFilter(filterValue))\n  // };\n\n\n  // const filteredContacts = useSelector((state) => state.contacts.filteredContacts);\n\n\n\n\n  return (\n    <div>\n      <div>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm \n        // onAddContact={handleAddContact} \n        />\n      </div>\n      <div>\n        <h2 className={styles.subtitle}>Contacts</h2>\n        <Filter \n              // value={filter} \n              // onChange={handleChangeFilter} \n            />\n        <ContactList \n        // contacts={contacts} onDeleteContact={handleDeleteContact} \n        />\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default Contacts\n\n/////////////////////////////////////===============================================////////////////////////////////\n// const Contacts = () => {\n//   return(\n//     <div><h1>Contact Page</h1></div>\n//   )\n\n\n// }\n// export default Contacts"],"names":["dispatch","useDispatch","className","styles","onSubmit","e","preventDefault","form","currentTarget","newName","elements","name","value","newNumber","number","addContact","reset","type","placeholder","pattern","title","required","selectAllContacts","state","contacts","selectFilteredContacts","filter","mapContacts","filteredContacts","useSelector","map","contact","onClick","contactId","id","deleteContact","onChange","setFilter","target","handleChange","useEffect","fetchContacts"],"sourceRoot":""}